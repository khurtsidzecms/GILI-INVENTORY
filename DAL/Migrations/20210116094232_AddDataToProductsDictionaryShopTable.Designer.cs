// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20210116094232_AddDataToProductsDictionaryShopTable")]
    partial class AddDataToProductsDictionaryShopTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DAL.Entities.Dictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dictionaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "მარკეტი"
                        },
                        new
                        {
                            Id = 2,
                            Name = "სუპერმარკეტი"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ჰიპერმარკეტი"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Apple",
                            Code = "APPLE159",
                            Description = "შეიძინეთ 2020 წლის საუკეთესო მოდელი - Apple iPhone 12 Pro Max Single Sim 512GB Pacific Blue",
                            ImportDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple iPhone 12 Pro Max"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Samsung",
                            Code = "SAMSUNG127",
                            Description = "შეიძინეთ Samsung G986FD Galaxy S20+ Dual Sim 12GB RAM",
                            ImportDate = new DateTime(2019, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy S20+"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "OnePlus",
                            Code = "ONEPLUS8",
                            Description = "შეიძინეთ შეღავათიან ფასად OnePlus 8T Dual Sim 8GB RAM 128GB 5G Global Version Lunar Silver",
                            ImportDate = new DateTime(2021, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnePlus 8T"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Shop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ქ.თბილისი, წერეთლის გამზ. N1",
                            Name = "ზუმერი",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "ქ. თბილისი, ქავთარაძის 1 (სითი მოლი)",
                            Name = "ალტა",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("DAL.Entities.ShopProduct", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Barcode")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("ShopId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopProducts");
                });

            modelBuilder.Entity("DAL.Entities.Shop", b =>
                {
                    b.HasOne("DAL.Entities.Dictionary", "Type")
                        .WithMany("ShopTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DAL.Entities.ShopProduct", b =>
                {
                    b.HasOne("DAL.Entities.Product", "Product")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Shop", "Shop")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("DAL.Entities.Dictionary", b =>
                {
                    b.Navigation("ShopTypes");
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.Navigation("ShopProducts");
                });

            modelBuilder.Entity("DAL.Entities.Shop", b =>
                {
                    b.Navigation("ShopProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
